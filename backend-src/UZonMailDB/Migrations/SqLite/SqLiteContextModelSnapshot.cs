// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UZonMail.DB.SqLite;

#nullable disable

namespace UZonMailService.Migrations.SqLite
{
    [DbContext(typeof(SqLiteContext))]
    partial class SqLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.13");

            modelBuilder.Entity("PermissionCodeRole", b =>
                {
                    b.Property<long>("PermissionCodesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RolesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PermissionCodesId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionCodeRole");
                });

            modelBuilder.Entity("RoleUserRoles", b =>
                {
                    b.Property<long>("RolesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserRolesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RolesId", "UserRolesId");

                    b.HasIndex("UserRolesId");

                    b.ToTable("RoleUserRoles");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Base.IdAndName", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.HasKey("Id");

                    b.ToTable("IdAndName");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.EmailAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.HasKey("Id");

                    b.ToTable("EmailAddress");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BccBoxes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .HasColumnType("TEXT");

                    b.Property<string>("CcBoxes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("InboxGroups")
                        .HasColumnType("TEXT");

                    b.Property<string>("Inboxes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InboxesCount")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDistributed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<string>("OutboxGroups")
                        .HasColumnType("TEXT");

                    b.Property<int>("OutboxesCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProxyIds")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SendEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SendStartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SendingType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SentCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subjects")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SuccessCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SendingGroups");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BCC")
                        .HasColumnType("TEXT");

                    b.Property<string>("CC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<long>("EmailTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableEmailTracker")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FromEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Inboxes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSendingBatch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OutBoxId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProxyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReadDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReceiptId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SendResult")
                        .HasColumnType("TEXT");

                    b.Property<long>("SendingGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToEmails")
                        .HasColumnType("TEXT");

                    b.Property<int>("TriedCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SendingGroupId");

                    b.ToTable("SendingItems");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingItemInbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromEmail")
                        .HasColumnType("TEXT");

                    b.Property<long>("InboxId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("SendingItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToEmail")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InboxId");

                    b.HasIndex("SendingItemId");

                    b.ToTable("SendingItemInboxes");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.EmailGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EmailGroups");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.Inbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("EmailGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastBeDeliveredDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastSuccessDeliveryDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("MinInboxCooldownHours")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ValidFailReason")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmailGroupId");

                    b.HasIndex("Email", "UserId")
                        .IsUnique();

                    b.ToTable("Inboxes");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.Outbox", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domain")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("EmailGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsValid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LinkCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxSendCountPerDay")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("ProxyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Remark")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplyToEmails")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SendingGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SentTotalToday")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SmtpHost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidFailReason")
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SendingGroupId");

                    b.HasIndex("Email", "UserId")
                        .IsUnique();

                    b.ToTable("Outboxes");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.SmtpInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SecurityProtocol")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SmtpInfos");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileBucket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<string>("RootDir")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FileBuckets");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("FileBucketId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastModifyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("LinkCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sha256")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileBucketId");

                    b.ToTable("FileObjects");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileReader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FirstDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxVisitCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitedCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileObjectId");

                    b.ToTable("FileReaders");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileUsage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OwnerUserId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SendingGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("SendingItemId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniqueName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FileObjectId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("SendingGroupId");

                    b.HasIndex("SendingItemId");

                    b.ToTable("FileUsages");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Organization.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<long?>("EmailTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Organization.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreateBy")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("EmailTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSystsemUser")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Permission.PermissionCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNegative")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("PermissionCodes");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Permission.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionCodesCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Permission.UserRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Settings.AppSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BoolValue")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("IntValue")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Json")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LongValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StringValue")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Settings.Proxy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShared")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MatchRegex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Proxies");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Templates.EmailTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("_id");

                    b.Property<long?>("SendingGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SendingGroupId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("PermissionCodeRole", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Permission.PermissionCode", null)
                        .WithMany()
                        .HasForeignKey("PermissionCodesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMail.DB.SQL.Core.Permission.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUserRoles", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Permission.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMail.DB.SQL.Core.Permission.UserRoles", null)
                        .WithMany()
                        .HasForeignKey("UserRolesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingItem", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", "SendingGroup")
                        .WithMany()
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SendingGroup");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingItemInbox", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Emails.Inbox", "Inbox")
                        .WithMany()
                        .HasForeignKey("InboxId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingItem", "SendingItem")
                        .WithMany()
                        .HasForeignKey("SendingItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Inbox");

                    b.Navigation("SendingItem");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.EmailGroup", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Organization.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.Inbox", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Emails.EmailGroup", null)
                        .WithMany("Inboxes")
                        .HasForeignKey("EmailGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.Outbox", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", null)
                        .WithMany("Outboxes")
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileObject", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Files.FileBucket", "FileBucket")
                        .WithMany()
                        .HasForeignKey("FileBucketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileBucket");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileReader", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Files.FileObject", "FileObject")
                        .WithMany()
                        .HasForeignKey("FileObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileObject");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Files.FileUsage", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Files.FileObject", "FileObject")
                        .WithMany()
                        .HasForeignKey("FileObjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMail.DB.SQL.Core.Organization.User", "OwnerUser")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", null)
                        .WithMany("Attachments")
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingItem", null)
                        .WithMany("Attachments")
                        .HasForeignKey("SendingItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FileObject");

                    b.Navigation("OwnerUser");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Organization.Department", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Templates.EmailTemplate", null)
                        .WithMany("ShareToOrganizations")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Organization.User", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Templates.EmailTemplate", null)
                        .WithMany("ShareToUsers")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Permission.UserRoles", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.Organization.User", "User")
                        .WithOne("UserRoles")
                        .HasForeignKey("UZonMail.DB.SQL.Core.Permission.UserRoles", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Templates.EmailTemplate", b =>
                {
                    b.HasOne("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", null)
                        .WithMany("Templates")
                        .HasForeignKey("SendingGroupId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingGroup", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Outboxes");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.EmailSending.SendingItem", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Emails.EmailGroup", b =>
                {
                    b.Navigation("Inboxes");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Organization.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("UZonMail.DB.SQL.Core.Templates.EmailTemplate", b =>
                {
                    b.Navigation("ShareToOrganizations");

                    b.Navigation("ShareToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
